#!/usr/bin/env zsh

# convert jupyter notebooks into executable python and adds hashbang

NBCONVERT_VERSION=$(jupyter-notebook -V | cut -d '.' -f 1)

if [ $NBCONVERT_VERSION -le 6 ]; then

  TEMPLATE=$(mktemp)
  echo "Preparing template: $TEMPLATE for V5 of nbconvert"

cat <<EOT >> $TEMPLATE
{% extends "python.tpl"%}
## set to python3
{%- block header -%}
#!/usr/bin/env python3
# coding: utf-8
{% endblock header %}

## remove markdown cells entirely
{% block markdowncell %}
{% endblock markdowncell %}

## remove cell execution count entirely
{% block in_prompt %}
{% endblock in_prompt %}


## remove magic statement completely
{% block codecell %}
{{'' if "get_ipython" in super() else super() }}
{% endblock codecell%}
EOT
else:

  TEMPLATE_FILE=$HOME/bin/develtools/nbconvert_templates/python_clean
  DEST=$HOME/.local/share/jupyter/nbconvert/templates/python/python_clean
  TEMPLATE=python_clean

  echo "using $TEMPLATE_FILE for V6+ of nbconvert"

  # create the template and remove any Jupyter Notebook magic commands
  # see: https://github.com/ipython/ipython/issues/3707

  if [ ! -L ${TEMPLATE_FILE} ] && [ ! -e ${TEMPlATE_FILE} ]; then
    ln -s ${TEMPLATE_FILE} ${DEST}
  fi
fi




echo converting $1 to ${1:r}.py
echo "********** #!/usr/bin/env python3 **********"

# check for a supplied file
if [[ $1 != "" ]];
then
  if [[ $2 != "" ]];
  then
    outpath=$2
  else
    outpath='./'
  fi

  filename=$(basename -- $1)
  extension="${filename##*.}"
  filename="${filename%.*}"

  jupyter nbconvert --to python $1 --stdout --template=$TEMPLATE > $outpath/$filename.py

else
  echo "converts ipython notebooks directly to executable python .py scripts"
  echo "error: no .ipynb specified"
  echo "$0 [NOTEBOOK File] [optional: output path]"
  echo "usage: $ nbconvert my_notebook.ipynb "
fi
